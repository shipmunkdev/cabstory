// prettier-ignore
{
  "compilerOptions": {
    "target": "es5",                          
    "lib": ["dom", "dom.iterable", "esnext"],   /* Specify library files to be included in the compilation. */
    "allowJs": true,                            /* Allow javascript files to be compiled. */
    "skipLibCheck": true,                       /* Skip type checking of declaration files. */
    "strict": true,                             /* Enable all strict type-checking options. */
    "forceConsistentCasingInFileNames": true,   /* Disallow inconsistently-cased references to the same file. */
    "esModuleInterop": true,                    /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "module": "esnext",                         /* Specify module code generation. */
    /* Additional Checks */
    "noEmit": true,                             /* Do not emit outputs. */
    "noUnusedLocals": true,                     /* Report errors on unused locals. */
    "noUnusedParameters": true,                 /* Report errors on unused parameters. */
    "noImplicitReturns": true,                  /* Report error when not all code paths in function return a value. */
    "noFallthroughCasesInSwitch": true,         /* Report errors for fallthrough cases in switch statement. */
    "noImplicitAny": true,                      /* Raise error on expressions and declarations with an implied 'any' type. */
    "resolveJsonModule": true,                  /* Include modules imported with '.json' extension */
    "isolatedModules": true,                    /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
    "jsx": "preserve",                          /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "incremental": true,                        /* Enable incremental compilation */
    "plugins": [                                /* Plugins */
    {
      "name": "next"                            /* Next.js plugin */
    }
  ],
    /* Module Resolution Options */
    "moduleResolution": "node",                 /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "baseUrl": "app",                           /* Base directory to resolve non-absolute module names. */
    "paths": {
      "@cabstory/*": ["*"],                              /* Path aliases */
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"], /* Files to include in compilation. */
  "exclude": ["node_modules"]                                                 /* Files to exclude from compilation. */
}
